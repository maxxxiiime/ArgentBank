swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile fetch successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile fetch successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
          
  /accounts/{accountID}/transactions/current:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch current month transactions
      description: Fetch current month transactions.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type : string
      produces:
        - application/json
      responses:
        '200':
          description: Account's transactions fetch successfully
          schema:
            $ref: '#/definitions/UserAccountList'
        '400':
          description: Invalid fields
        '401':
          description: Unauthorized
        '404':
          description: Account not found
        '500':
          description: Internal server error

  /accounts/{accountID}/transactions/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch transaction details
      description: Fetch details from a specific transaction.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type : string
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type : string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions details fetch successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal server error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Updating category and note for a transaction
      description: Update details from a specific transaction.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type : string
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type : string
        - in: body
          name: transactionUpdate
          description: New details for transaction (note and category)
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transactions details updated successfully
          schema:
            $ref: '#/definitions/TransactionUpdateDetailAPIResponse'

        '400':
          description: Invalid fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal server error

  /accounts/{accountID}/transactions/{transactionID}/note/{noteID}:
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a note of a transaction
      description: Delete a note from a specific transaction in my API.

      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type : string
        - in: path
          name: transactionID
          description: Unique transaction ID
          required: true
          type : string
        - name: noteID
          in: path
          description: The ID of the note you want to delete.
          required: true
          type: string
        
      responses:
        '200':
          description: Deleted successfully.
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized Access
        '403':
          description: Forbidden Access
        '404':
          description: Account not found
        '500':
          description: Internal Server Error

          
          
          
          
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
        
        


  UserAccountList:
    type: object
    properties:
      accountID:
        type: string
        description: Account ID
      years:
        type: string
        description: current 
      month:
        type: string
        description: current 
      transactions:
        type: array
        items: 
          $ref: '#/definitions/Transaction'
      
  UserAccount:
    type: object
    properties:
      accountID:
        type: string
        description: Account ID
      transactions:
        type: array
        items: 
          $ref: '#/definitions/Transaction'
          
          
  Transaction:
    type: object
    properties:
      transactionID:
        type: string
        description: Transaction ID
      transaction-type:
        type: string
        description: Transaction type
      date: 
        type: string
        description: Transaction date
      amount:
        type: number
        description: Transaction amount
      category:
        type: string
        description: Transaction category
      note: 
        type: string
        description: Transaction note
      balance:
        type: number
        description: Balance after transaction
      receiver:
        type: string
        description: receiver of the transaction
  TransactionUpdate:
    type: object
    properties:
      note:
        type: string
        description: Transaction note to update
      category:
        type: string
        description: Transaction category to update
  TransactionUpdateDetailAPIResponse:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      body: 
        type: object
        properties:
          note:
            type: string
            description: updated note
          category : 
            type: string
            description : updated category
